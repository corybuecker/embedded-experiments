# Enables Zephyr's event subsystem for event-driven programming
CONFIG_EVENTS=y

# Enables GPIO (General Purpose Input/Output) driver support for controlling and reading digital pins
CONFIG_GPIO=y

# Sets the default Bluetooth device name, advertised and used in connections unless overridden at runtime
CONFIG_BT_DEVICE_NAME="Notifier 1"
# Enables Bluetooth 5.0 Extended Advertising for larger packets and advanced features
CONFIG_BT_EXT_ADV=y
# Allows the Bluetooth GATT database to be created/modified at runtime, not just at compile time
CONFIG_BT_GATT_DYNAMIC_DB=y
# Enables the Bluetooth Peripheral role, allowing the device to advertise and accept connections from Central devices
CONFIG_BT_PERIPHERAL=y
# Enables the full Bluetooth stack, including LE and (if available) Classic features
CONFIG_BT=y

# # Enables the system console for input/output of system messages, shell, and debugging
# CONFIG_CONSOLE=y
# # Redirects printk() output to the Zephyr logging subsystem for unified log management
# CONFIG_LOG_PRINTK=y
# # Enables Zephyrâ€™s structured, multi-level logging subsystem
# CONFIG_LOG=y
# # Enables the printk() function for simple, low-level debug output
# CONFIG_PRINTK=y
# # Routes system console output through SEGGER RTT for high-speed debug communication
# CONFIG_RTT_CONSOLE=y
# # Enables/disables routing the system console to a UART device (n = disables UART console)
# CONFIG_UART_CONSOLE=n
# # Enables/disables routing UART output over RTT (n = keeps UART and RTT output separate)
# CONFIG_UART_RTT=n
# # Enables use of SEGGER RTT for debug output and communication
# CONFIG_USE_SEGGER_RTT=y

# # Enables display of detailed thread information in debug output (names, priorities, stack usage)
# CONFIG_DEBUG_THREAD_INFO=y
# # Enables general debugging features, such as runtime checks and debug info
# CONFIG_DEBUG=y
# # Enables the tracing subsystem for recording and analyzing system events
# CONFIG_TRACING=y
